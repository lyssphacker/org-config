* Org initialization
** Lexical Lisp
#+BEGIN_SRC emacs-lisp
;;; -*- lexical-binding: t -*-
#+END_SRC

* User Interface
** Emacs Look
#+BEGIN_SRC emacs-lisp
(if (boundp 'menu-bar-mode)
    (menu-bar-mode -1))
(if (boundp 'tool-bar-mode)
    (tool-bar-mode -1))
(if (boundp 'scroll-bar-mode)
    (scroll-bar-mode -1))
#+END_SRC

I love the empty-lines notification. However, it does seem to fail on the very last line? I havenâ€™t solved this yet.

#+BEGIN_SRC emacs-lisp
(set-default 'indicate-empty-lines t)
#+END_SRC

This adds line numbers and column numbers in the emacs modeline. Fucking essential.
#+BEGIN_SRC emacs-lisp
(line-number-mode 1)
(column-number-mode 1)
#+END_SRC

#+BEGIN_SRC emacs-lisp 
(load-theme 'wombat t)
#+END_SRC

* Copy Without selection
#+BEGIN_SRC emacs-lisp
(defun get-point (symbol &optional arg)
  "get the point"
  (funcall symbol arg)
  (point))
     
(defun copy-thing (begin-of-thing end-of-thing &optional arg)
  "Copy thing between beg & end into kill ring."
  (save-excursion
    (let ((beg (get-point begin-of-thing 1))
	  (end (get-point end-of-thing arg)))
      (copy-region-as-kill beg end))))
     
(defun paste-to-mark (&optional arg)
  "Paste things to mark, or to the prompt in shell-mode."
  (unless (eq arg 1)
    (if (string= "shell-mode" major-mode)
	(comint-next-prompt 25535)
      (goto-char (mark)))
    (yank)))

(defun copy-word (&optional arg)
  "Copy words at point into kill-ring"
  (interactive "P")
  (copy-thing 'backward-word 'forward-word arg))

(global-set-key (kbd "C-c w") (quote copy-word))

(defun copy-line (&optional arg)
  "Save current line into Kill-Ring without mark the line "
  (interactive "P")
  (copy-thing 'beginning-of-line 'end-of-line arg))

(global-set-key (kbd "C-c l") (quote copy-line))
#+END_SRC
* Other
** Hide emphasis markers
#+BEGIN_SRC emacs-lisp
(setq org-hide-emphasis-markers t)
#+END_SRC
** Better Header Bullets
#+BEGIN_SRC emacs-lisp
(require 'org-superstar)
(add-hook 'org-mode-hook (lambda () (org-superstar-mode 1)))
#+END_SRC
** Custom Timestamp Format
#+BEGIN_SRC emacs-lisp
(setq-default org-display-custom-times t)
(setq org-time-stamp-custom-formats 
  '("<%d %b %Y %a" . "<%d %b %Y %a %H:%M>"))
#+END_SRC
** Visit file in the same window
#+BEGIN_SRC emacs-lisp
(defun dired-mouse-find-file (event)
  "In Dired, visit the file or directory name you click on."
  (interactive "e")
  (let (window pos file)
    (save-excursion
      (setq window (posn-window (event-end event))
            pos (posn-point (event-end event)))
      (if (not (windowp window))
          (error "No file chosen"))
      (set-buffer (window-buffer window))
      (goto-char pos)
      (setq file (dired-get-file-for-visit)))
    (if (file-directory-p file)
        (or (and (cdr dired-subdir-alist)
                 (dired-goto-subdir file))
            (progn
              (select-window window)
              (dired-other-window file)))
      (select-window window)
      (find-file (file-name-sans-versions file t)))))

(define-key dired-mode-map [mouse-3] 'dired-mouse-find-file)
#+END_SRC
** Indentation of code in code blocks
#+BEGIN_SRC emacs-lisp
(setq org-src-preserve-indentation nil)
(setq org-edit-src-content-indentation 0)
#+END_SRC
** Make mouse-1 behave like RET
#+BEGIN_SRC emacs-lisp
(define-key dired-mode-map [mouse-1] 'dired-find-file)
#+END_SRC
** Hide leading starts
#+BEGIN_SRC emacs-lisp
(setq org-hide-leading-stars nil)
(setq org-superstar-leading-bullet ?\s)
#+END_SRC
** Define custom date-time format
#+BEGIN_SRC emacs-lisp
(setq-default org-display-custom-times t)
(setq org-time-stamp-custom-formats '("<%a %b %e %Y>" . "<%a %b %e %Y %H:%M>"))
#+END_SRC
** Enable Org Indent mode
#+BEGIN_SRC emacs-lisp
(setq org-startup-indented t)
#+END_SRC
